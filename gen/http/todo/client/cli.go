// Code generated by goa v3.11.3, DO NOT EDIT.
//
// todo HTTP client CLI support package
//
// Command:
// $ goa gen todo/design

package client

import (
	"encoding/json"
	"fmt"
	todo "todo/gen/todo"
)

// BuildCreateTaskPayload builds the payload for the todo createTask endpoint
// from CLI flags.
func BuildCreateTaskPayload(todoCreateTaskBody string) (*todo.CreateTaskPayload, error) {
	var err error
	var body CreateTaskRequestBody
	{
		err = json.Unmarshal([]byte(todoCreateTaskBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"name\": \"Numquam distinctio.\"\n   }'")
		}
	}
	v := &todo.CreateTaskPayload{
		Name: body.Name,
	}

	return v, nil
}

// BuildCompleteTaskPayload builds the payload for the todo completeTask
// endpoint from CLI flags.
func BuildCompleteTaskPayload(todoCompleteTaskID string) (*todo.CompleteTaskPayload, error) {
	var id string
	{
		id = todoCompleteTaskID
	}
	v := &todo.CompleteTaskPayload{}
	v.ID = &id

	return v, nil
}

// BuildRevertTaskPayload builds the payload for the todo revertTask endpoint
// from CLI flags.
func BuildRevertTaskPayload(todoRevertTaskID string) (*todo.RevertTaskPayload, error) {
	var id string
	{
		id = todoRevertTaskID
	}
	v := &todo.RevertTaskPayload{}
	v.ID = &id

	return v, nil
}
