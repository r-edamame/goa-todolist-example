// Code generated by goa v3.11.3, DO NOT EDIT.
//
// todo gRPC server
//
// Command:
// $ goa gen todo/design

package server

import (
	"context"
	todopb "todo/gen/grpc/todo/pb"
	todo "todo/gen/todo"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
)

// Server implements the todopb.TodoServer interface.
type Server struct {
	CreateTaskH   goagrpc.UnaryHandler
	CompleteTaskH goagrpc.UnaryHandler
	RevertTaskH   goagrpc.UnaryHandler
	todopb.UnimplementedTodoServer
}

// New instantiates the server struct with the todo service endpoints.
func New(e *todo.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		CreateTaskH:   NewCreateTaskHandler(e.CreateTask, uh),
		CompleteTaskH: NewCompleteTaskHandler(e.CompleteTask, uh),
		RevertTaskH:   NewRevertTaskHandler(e.RevertTask, uh),
	}
}

// NewCreateTaskHandler creates a gRPC handler which serves the "todo" service
// "createTask" endpoint.
func NewCreateTaskHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeCreateTaskRequest, EncodeCreateTaskResponse)
	}
	return h
}

// CreateTask implements the "CreateTask" method in todopb.TodoServer interface.
func (s *Server) CreateTask(ctx context.Context, message *todopb.CreateTaskRequest) (*todopb.CreateTaskResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "createTask")
	ctx = context.WithValue(ctx, goa.ServiceKey, "todo")
	resp, err := s.CreateTaskH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*todopb.CreateTaskResponse), nil
}

// NewCompleteTaskHandler creates a gRPC handler which serves the "todo"
// service "completeTask" endpoint.
func NewCompleteTaskHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeCompleteTaskRequest, EncodeCompleteTaskResponse)
	}
	return h
}

// CompleteTask implements the "CompleteTask" method in todopb.TodoServer
// interface.
func (s *Server) CompleteTask(ctx context.Context, message *todopb.CompleteTaskRequest) (*todopb.CompleteTaskResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "completeTask")
	ctx = context.WithValue(ctx, goa.ServiceKey, "todo")
	resp, err := s.CompleteTaskH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*todopb.CompleteTaskResponse), nil
}

// NewRevertTaskHandler creates a gRPC handler which serves the "todo" service
// "revertTask" endpoint.
func NewRevertTaskHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeRevertTaskRequest, EncodeRevertTaskResponse)
	}
	return h
}

// RevertTask implements the "RevertTask" method in todopb.TodoServer interface.
func (s *Server) RevertTask(ctx context.Context, message *todopb.RevertTaskRequest) (*todopb.RevertTaskResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "revertTask")
	ctx = context.WithValue(ctx, goa.ServiceKey, "todo")
	resp, err := s.RevertTaskH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*todopb.RevertTaskResponse), nil
}
